const SpecReporter = require("jasmine-spec-reporter").SpecReporter;
const AllureReporter = require("jasmine-allure-reporter");

const autoGeneratedFolderName = "auto-generated";

let platform = "";
let browserName = "";

const reportersConfigSetup = {
    onPrepareSetup() {
        const log4js = require("log4js");
        const dateStamp = new Date().toUTCString().replace(/[^A-Z0-9]+/ig, "-").toLowerCase();

        log4js.configure({
            appenders: {
                multi: {
                    type: "multiFile",
                    base: `e2e/${autoGeneratedFolderName}/logs/${(process.env.BUILD_NUMBER || dateStamp)}`,
                    property: "categoryName",
                    extension: ".log"
                }
            },
            categories: {
                default: {appenders: ["multi"], level: "all"}
            }
        });

        require("ts-node").register({
            project: "tsconfig.json"
        });

        jasmine.getEnv().addReporter(new SpecReporter({
            spec: {
                displayStacktrace: false
            }
        }));

        return browser.getCapabilities().then(function (cap) {
            browser.platform = platform;
            browser.browserName = browserName;
        });
    },

    allureReporterSetup() {
        const reporter = new AllureReporter({
            resultsDir: `e2e/${autoGeneratedFolderName}/allure-results`
        });

        jasmine.getEnv().addReporter(reporter);
        jasmine.getEnv().afterEach(function (done) {
            browser.takeScreenshot().then(function (png) {
                allure.createAttachment('Screenshot', function () {
                    return Buffer.from(png, 'base64')
                }, 'image/png')();
                done();
            });
        });
    },

    jasmineJUnitXmlReporterSetup() {
        const jasmineReporters = require("jasmine-reporters");

        jasmine.getEnv().addReporter(new jasmineReporters.JUnitXmlReporter({
            consolidateAll: true,
            savePath: `e2e/${autoGeneratedFolderName}/jasmineJUnit-results`,
            filePrefix: 'JUnitReport'
        }));
    },

    jasmineNUnitXmlReporterSetup() {
        const jasmineReporters = require("jasmine-reporters");

        jasmine.getEnv().addReporter(new jasmineReporters.NUnitXmlReporter({
            savePath: `e2e/${autoGeneratedFolderName}/jasmineNUnit-results`,
            filename: 'NUnitReport.xml'
        }));
    }
};

module.exports = reportersConfigSetup;
